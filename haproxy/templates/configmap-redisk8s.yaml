{{- if eq .Values.haproxy.config "redisk8s"}}
{{- $redisk8s := .Values.haproxy.redisk8s -}}
apiVersion: v1
kind: ConfigMap
metadata:
  name: "{{ include "haproxy.fullname" . }}-redisk8s"
  labels:
    app.kubernetes.io/name: {{ include "haproxy.name" . }}
    helm.sh/chart: {{ include "haproxy.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
data:
  haproxy.cfg: |-
    global
      log stdout local0

    resolvers mydns
      parse-resolv-conf
      accepted_payload_size 8192 # allow larger DNS payloads

    defaults
      log global

      option dontlognull
      timeout connect 5s
      timeout client 10s
      timeout server 10s

    {{- if .Values.metrics.enabled }}
    frontend stats
      mode http
      bind *:9000

      stats enable
      stats uri /stats
      stats refresh 3s

      option http-use-htx
      http-request use-service prometheus-exporter if { path /metrics }
    {{ end }}

    frontend redis
      bind *:{{ .Values.haproxy.frontendPort }}
      mode tcp
      option clitcpka
      default_backend redis-nodes

    backend redis-nodes
      mode tcp

      {{ if $redisk8s.check.enabled }}
      option tcp-check
      tcp-check connect

      {{- if or ($redisk8s.check.redis.auth) ( .Values.haproxy.check.existingSecret) }}
      tcp-check send AUTH\ "${CHECK_AUTH_CREDENTIALS}"\r\n
      tcp-check expect string +OK
      {{- end }}

      tcp-check send PING\r\n
      tcp-check expect string +PONG

      tcp-check send info\ replication\r\n
      tcp-check expect string role:master

      tcp-check send QUIT\r\n
      tcp-check expect string +OK
      {{ end }}

      server-template redis- {{ $redisk8s.nodeCount }} {{ $redisk8s.dnsservicename }}:{{ default "6379" $redisk8s.port }} {{ if $redisk8s.check.enabled }}check inter 1s{{ end }} resolvers mydns init-addr none
{{- end }}
